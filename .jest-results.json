{
  "numFailedTestSuites": 0,
  "numFailedTests": 0,
  "numPassedTestSuites": 20,
  "numPassedTests": 217,
  "numPendingTestSuites": 0,
  "numPendingTests": 0,
  "numRuntimeErrorTestSuites": 0,
  "numTodoTests": 0,
  "numTotalTestSuites": 20,
  "numTotalTests": 217,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1754922946071,
  "success": true,
  "testResults": [
    {
      "assertionResults": [
        {
          "ancestorTitles": ["useBorrowQuotes", "Popular Runes Fetching"],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowQuotes Popular Runes Fetching should fetch popular runes on mount and include LIQUIDIUM•TOKEN",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should fetch popular runes on mount and include LIQUIDIUM•TOKEN"
        },
        {
          "ancestorTitles": ["useBorrowQuotes", "Popular Runes Fetching"],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowQuotes Popular Runes Fetching should handle popular runes fetch error and fallback to LIQUIDIUM•TOKEN",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle popular runes fetch error and fallback to LIQUIDIUM•TOKEN"
        },
        {
          "ancestorTitles": ["useBorrowQuotes", "Popular Runes Fetching"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowQuotes Popular Runes Fetching should handle non-array response from popular runes API",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle non-array response from popular runes API"
        },
        {
          "ancestorTitles": ["useBorrowQuotes", "Borrow Range Fetching"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowQuotes Borrow Range Fetching should fetch borrow ranges when collateral asset changes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should fetch borrow ranges when collateral asset changes"
        },
        {
          "ancestorTitles": ["useBorrowQuotes", "Borrow Range Fetching"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowQuotes Borrow Range Fetching should use rune info ID when it contains colon",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should use rune info ID when it contains colon"
        },
        {
          "ancestorTitles": ["useBorrowQuotes", "Borrow Range Fetching"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowQuotes Borrow Range Fetching should not fetch ranges for BTC asset",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should not fetch ranges for BTC asset"
        },
        {
          "ancestorTitles": ["useBorrowQuotes", "Borrow Range Fetching"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowQuotes Borrow Range Fetching should not fetch ranges when required params are missing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should not fetch ranges when required params are missing"
        },
        {
          "ancestorTitles": ["useBorrowQuotes", "Borrow Range Fetching"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowQuotes Borrow Range Fetching should handle borrow range fetch error with specific error messages",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle borrow range fetch error with specific error messages"
        },
        {
          "ancestorTitles": ["useBorrowQuotes", "Borrow Range Fetching"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowQuotes Borrow Range Fetching should handle unsuccessful borrow range response",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle unsuccessful borrow range response"
        },
        {
          "ancestorTitles": ["useBorrowQuotes", "Quote Fetching"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowQuotes Quote Fetching should fetch quotes successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should fetch quotes successfully"
        },
        {
          "ancestorTitles": ["useBorrowQuotes", "Quote Fetching"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowQuotes Quote Fetching should not fetch quotes when required params are missing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should not fetch quotes when required params are missing"
        },
        {
          "ancestorTitles": ["useBorrowQuotes", "Quote Fetching"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowQuotes Quote Fetching should handle quote fetch error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle quote fetch error"
        },
        {
          "ancestorTitles": ["useBorrowQuotes", "Quote Fetching"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowQuotes Quote Fetching should handle response without rune details",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle response without rune details"
        },
        {
          "ancestorTitles": ["useBorrowQuotes", "Quote Fetching"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowQuotes Quote Fetching should handle response with no offers",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle response with no offers"
        },
        {
          "ancestorTitles": ["useBorrowQuotes", "Quote Fetching"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowQuotes Quote Fetching should calculate global min/max from multiple ranges",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should calculate global min/max from multiple ranges"
        },
        {
          "ancestorTitles": ["useBorrowQuotes", "Amount Conversion Logic"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowQuotes Amount Conversion Logic should handle BigInt conversion for high precision decimals",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle BigInt conversion for high precision decimals"
        },
        {
          "ancestorTitles": ["useBorrowQuotes", "Amount Conversion Logic"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowQuotes Amount Conversion Logic should handle invalid collateral amount with validation error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle invalid collateral amount with validation error"
        },
        {
          "ancestorTitles": ["useBorrowQuotes", "Amount Conversion Logic"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowQuotes Amount Conversion Logic should handle zero or negative collateral amount with validation error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle zero or negative collateral amount with validation error"
        },
        {
          "ancestorTitles": ["useBorrowQuotes", "Amount Conversion Logic"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowQuotes Amount Conversion Logic should handle zero decimals correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle zero decimals correctly"
        },
        {
          "ancestorTitles": ["useBorrowQuotes", "State Management"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowQuotes State Management should reset quotes when resetQuotes is called",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should reset quotes when resetQuotes is called"
        },
        {
          "ancestorTitles": ["useBorrowQuotes", "State Management"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowQuotes State Management should manage selectedQuoteId state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should manage selectedQuoteId state"
        },
        {
          "ancestorTitles": ["useBorrowQuotes", "State Management"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowQuotes State Management should reset quotes before fetching new ones",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should reset quotes before fetching new ones"
        },
        {
          "ancestorTitles": ["useBorrowQuotes", "formatRuneAmount function"],
          "duration": 53,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowQuotes formatRuneAmount function should format amounts correctly with BigInt",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should format amounts correctly with BigInt"
        },
        {
          "ancestorTitles": ["useBorrowQuotes", "formatRuneAmount function"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowQuotes formatRuneAmount function should handle zero decimals in formatting",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle zero decimals in formatting"
        },
        {
          "ancestorTitles": ["useBorrowQuotes", "formatRuneAmount function"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowQuotes formatRuneAmount function should fallback to Number conversion on BigInt error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should fallback to Number conversion on BigInt error"
        }
      ],
      "endTime": 1754922946514,
      "message": "",
      "name": "/Users/robin/code/swapping/src/hooks/useBorrowQuotes.test.ts",
      "startTime": 1754922946252,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["useWalletConnection", "initial state"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useWalletConnection initial state returns correct initial state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "returns correct initial state"
        },
        {
          "ancestorTitles": ["useWalletConnection", "initial state"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useWalletConnection initial state passes through LaserEyes state correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "passes through LaserEyes state correctly"
        },
        {
          "ancestorTitles": ["useWalletConnection", "toggleDropdown"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useWalletConnection toggleDropdown toggles dropdown state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "toggles dropdown state"
        },
        {
          "ancestorTitles": ["useWalletConnection", "toggleDropdown"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useWalletConnection toggleDropdown clears errors when toggling dropdown",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "clears errors when toggling dropdown"
        },
        {
          "ancestorTitles": ["useWalletConnection", "handleConnect"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useWalletConnection handleConnect successfully connects to wallet",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "successfully connects to wallet"
        },
        {
          "ancestorTitles": ["useWalletConnection", "handleConnect"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useWalletConnection handleConnect handles wallet not installed (Unisat specific check)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles wallet not installed (Unisat specific check)"
        },
        {
          "ancestorTitles": ["useWalletConnection", "handleConnect"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useWalletConnection handleConnect handles connection error with wallet-specific patterns",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles connection error with wallet-specific patterns"
        },
        {
          "ancestorTitles": ["useWalletConnection", "handleConnect"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useWalletConnection handleConnect handles connection error with common patterns",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles connection error with common patterns"
        },
        {
          "ancestorTitles": ["useWalletConnection", "handleConnect"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useWalletConnection handleConnect handles generic connection error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles generic connection error"
        },
        {
          "ancestorTitles": ["useWalletConnection", "handleConnect"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useWalletConnection handleConnect handles non-Error exceptions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles non-Error exceptions"
        },
        {
          "ancestorTitles": ["useWalletConnection", "handleConnect"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useWalletConnection handleConnect returns early if already connecting",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns early if already connecting"
        },
        {
          "ancestorTitles": ["useWalletConnection", "handleConnect"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useWalletConnection handleConnect clears previous errors before connecting",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "clears previous errors before connecting"
        },
        {
          "ancestorTitles": ["useWalletConnection", "handleConnect"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useWalletConnection handleConnect uses provider name as fallback for unknown wallets",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "uses provider name as fallback for unknown wallets"
        },
        {
          "ancestorTitles": ["useWalletConnection", "handleDisconnect"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useWalletConnection handleDisconnect disconnects wallet and clears errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "disconnects wallet and clears errors"
        },
        {
          "ancestorTitles": [
            "useWalletConnection",
            "click outside functionality"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useWalletConnection click outside functionality closes dropdown when clicking outside",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "closes dropdown when clicking outside"
        },
        {
          "ancestorTitles": [
            "useWalletConnection",
            "click outside functionality"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useWalletConnection click outside functionality does not close dropdown when clicking inside",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "does not close dropdown when clicking inside"
        },
        {
          "ancestorTitles": [
            "useWalletConnection",
            "click outside functionality"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useWalletConnection click outside functionality removes event listener on unmount",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "removes event listener on unmount"
        },
        {
          "ancestorTitles": ["useWalletConnection", "wallet error patterns"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useWalletConnection wallet error patterns handles unisat wallet error pattern \"not detected\"",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles unisat wallet error pattern \"not detected\""
        },
        {
          "ancestorTitles": ["useWalletConnection", "wallet error patterns"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useWalletConnection wallet error patterns handles xverse wallet error pattern \"no bitcoin wallet installed\"",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles xverse wallet error pattern \"no bitcoin wallet installed\""
        },
        {
          "ancestorTitles": ["useWalletConnection", "wallet error patterns"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useWalletConnection wallet error patterns handles leather wallet error pattern \"leather isn't installed\"",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles leather wallet error pattern \"leather isn't installed\""
        },
        {
          "ancestorTitles": ["useWalletConnection", "wallet error patterns"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useWalletConnection wallet error patterns handles oyl wallet error pattern \"oyl isn't installed\"",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles oyl wallet error pattern \"oyl isn't installed\""
        },
        {
          "ancestorTitles": ["useWalletConnection", "wallet error patterns"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useWalletConnection wallet error patterns handles magic-eden wallet error pattern \"no bitcoin wallet installed\"",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles magic-eden wallet error pattern \"no bitcoin wallet installed\""
        },
        {
          "ancestorTitles": ["useWalletConnection", "wallet error patterns"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useWalletConnection wallet error patterns handles okx wallet error pattern \"cannot read properties of undefined\"",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles okx wallet error pattern \"cannot read properties of undefined\""
        },
        {
          "ancestorTitles": ["useWalletConnection", "wallet error patterns"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useWalletConnection wallet error patterns handles orange wallet error pattern \"no orange bitcoin wallet installed\"",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles orange wallet error pattern \"no orange bitcoin wallet installed\""
        },
        {
          "ancestorTitles": ["useWalletConnection", "wallet error patterns"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useWalletConnection wallet error patterns handles phantom wallet error pattern \"phantom isn't installed\"",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles phantom wallet error pattern \"phantom isn't installed\""
        },
        {
          "ancestorTitles": ["useWalletConnection", "wallet error patterns"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useWalletConnection wallet error patterns handles wizz wallet error pattern \"wallet is not installed\"",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles wizz wallet error pattern \"wallet is not installed\""
        },
        {
          "ancestorTitles": [
            "useWalletConnection",
            "AVAILABLE_WALLETS constant"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useWalletConnection AVAILABLE_WALLETS constant exports correct wallet configuration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "exports correct wallet configuration"
        }
      ],
      "endTime": 1754922946713,
      "message": "",
      "name": "/Users/robin/code/swapping/src/hooks/useWalletConnection.test.ts",
      "startTime": 1754922946534,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["InputArea"],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "InputArea renders with assetSelectorEnabled and no onAssetChange",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with assetSelectorEnabled and no onAssetChange"
        }
      ],
      "endTime": 1754922946836,
      "message": "",
      "name": "/Users/robin/code/swapping/src/components/InputArea.test.tsx",
      "startTime": 1754922946727,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["/api/portfolio-data"],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/portfolio-data should return portfolio data successfully with complete data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should return portfolio data successfully with complete data"
        },
        {
          "ancestorTitles": ["/api/portfolio-data"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/portfolio-data should return 400 when address is missing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 400 when address is missing"
        },
        {
          "ancestorTitles": ["/api/portfolio-data"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/portfolio-data should return 400 when address is empty",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return 400 when address is empty"
        },
        {
          "ancestorTitles": ["/api/portfolio-data"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/portfolio-data should return empty portfolio when address has no rune balances",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return empty portfolio when address has no rune balances"
        },
        {
          "ancestorTitles": ["/api/portfolio-data"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/portfolio-data should handle non-array balances response from Ordiscan",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle non-array balances response from Ordiscan"
        },
        {
          "ancestorTitles": ["/api/portfolio-data"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/portfolio-data should fetch missing rune info from external API",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should fetch missing rune info from external API"
        },
        {
          "ancestorTitles": ["/api/portfolio-data"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/portfolio-data should fetch missing market data from external API",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should fetch missing market data from external API"
        },
        {
          "ancestorTitles": ["/api/portfolio-data"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/portfolio-data should handle Supabase rune info errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Supabase rune info errors gracefully"
        },
        {
          "ancestorTitles": ["/api/portfolio-data"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/portfolio-data should handle Supabase market data errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Supabase market data errors gracefully"
        },
        {
          "ancestorTitles": ["/api/portfolio-data"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/portfolio-data should handle Ordiscan API errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle Ordiscan API errors"
        },
        {
          "ancestorTitles": ["/api/portfolio-data"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/portfolio-data should handle missing external API data gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle missing external API data gracefully"
        },
        {
          "ancestorTitles": ["/api/portfolio-data"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/portfolio-data should batch fetch data efficiently for multiple runes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should batch fetch data efficiently for multiple runes"
        },
        {
          "ancestorTitles": ["/api/portfolio-data"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/portfolio-data should filter market data by last_updated_at timestamp",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should filter market data by last_updated_at timestamp"
        }
      ],
      "endTime": 1754922946921,
      "message": "",
      "name": "/Users/robin/code/swapping/src/app/api/portfolio-data/route.test.ts",
      "startTime": 1754922946841,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "/api/cached-popular-runes",
            "when cached data exists and is fresh"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/cached-popular-runes when cached data exists and is fresh should return cached data immediately without refresh",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should return cached data immediately without refresh"
        },
        {
          "ancestorTitles": [
            "/api/cached-popular-runes",
            "when cached data exists but should refresh"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/cached-popular-runes when cached data exists but should refresh should return cached data and trigger background refresh",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return cached data and trigger background refresh"
        },
        {
          "ancestorTitles": [
            "/api/cached-popular-runes",
            "when cached data exists but should refresh"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/cached-popular-runes when cached data exists but should refresh should handle background refresh failure gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle background refresh failure gracefully"
        },
        {
          "ancestorTitles": [
            "/api/cached-popular-runes",
            "when no cached data exists (first run)"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/cached-popular-runes when no cached data exists (first run) should fetch data synchronously and cache it",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should fetch data synchronously and cache it"
        },
        {
          "ancestorTitles": [
            "/api/cached-popular-runes",
            "when no cached data exists (first run)"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/cached-popular-runes when no cached data exists (first run) should handle invalid API response format",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle invalid API response format"
        },
        {
          "ancestorTitles": [
            "/api/cached-popular-runes",
            "when no cached data exists (first run)"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/cached-popular-runes when no cached data exists (first run) should handle null API response",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle null API response"
        },
        {
          "ancestorTitles": [
            "/api/cached-popular-runes",
            "when no cached data exists (first run)"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/cached-popular-runes when no cached data exists (first run) should return fallback data when API fails and cache returns fallback",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should return fallback data when API fails and cache returns fallback"
        },
        {
          "ancestorTitles": ["/api/cached-popular-runes", "error handling"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/cached-popular-runes error handling should handle cache metadata fetch errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle cache metadata fetch errors"
        },
        {
          "ancestorTitles": ["/api/cached-popular-runes", "error handling"],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/cached-popular-runes error handling should handle updateLastRefreshAttempt errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle updateLastRefreshAttempt errors gracefully"
        },
        {
          "ancestorTitles": [
            "/api/cached-popular-runes",
            "background refresh behavior"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/cached-popular-runes background refresh behavior should not trigger background refresh when cache is stale",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should not trigger background refresh when cache is stale"
        },
        {
          "ancestorTitles": [
            "/api/cached-popular-runes",
            "background refresh behavior"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/cached-popular-runes background refresh behavior should handle caching errors during background refresh",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle caching errors during background refresh"
        },
        {
          "ancestorTitles": [
            "/api/cached-popular-runes",
            "response format validation"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/cached-popular-runes response format validation should return correct response format for fresh cache",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should return correct response format for fresh cache"
        },
        {
          "ancestorTitles": [
            "/api/cached-popular-runes",
            "response format validation"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/cached-popular-runes response format validation should return correct response format for expired cache",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return correct response format for expired cache"
        },
        {
          "ancestorTitles": [
            "/api/cached-popular-runes",
            "response format validation"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/cached-popular-runes response format validation should handle null lastRefreshAttempt",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle null lastRefreshAttempt"
        }
      ],
      "endTime": 1754922946992,
      "message": "",
      "name": "/Users/robin/code/swapping/src/app/api/cached-popular-runes/route.test.ts",
      "startTime": 1754922946926,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["useBorrowProcess", "initial state"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowProcess initial state should initialize with correct default state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "should initialize with correct default state"
        },
        {
          "ancestorTitles": ["useBorrowProcess", "startLoan validation"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowProcess startLoan validation should set error for missing quote ID",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should set error for missing quote ID"
        },
        {
          "ancestorTitles": ["useBorrowProcess", "startLoan validation"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowProcess startLoan validation should set error for empty collateral amount",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should set error for empty collateral amount"
        },
        {
          "ancestorTitles": ["useBorrowProcess", "startLoan validation"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowProcess startLoan validation should set error for invalid collateral amount (NaN)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should set error for invalid collateral amount (NaN)"
        },
        {
          "ancestorTitles": ["useBorrowProcess", "startLoan validation"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowProcess startLoan validation should set error for zero or negative collateral amount",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should set error for zero or negative collateral amount"
        },
        {
          "ancestorTitles": ["useBorrowProcess", "successful loan flow"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowProcess successful loan flow should complete full loan process successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "should complete full loan process successfully"
        },
        {
          "ancestorTitles": ["useBorrowProcess", "successful loan flow"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowProcess successful loan flow should handle different decimal places correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle different decimal places correctly"
        },
        {
          "ancestorTitles": ["useBorrowProcess", "successful loan flow"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowProcess successful loan flow should handle high decimal places correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle high decimal places correctly"
        },
        {
          "ancestorTitles": ["useBorrowProcess", "error handling"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowProcess error handling should handle prepare borrow API failure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle prepare borrow API failure"
        },
        {
          "ancestorTitles": ["useBorrowProcess", "error handling"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowProcess error handling should handle missing prepare response data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle missing prepare response data"
        },
        {
          "ancestorTitles": ["useBorrowProcess", "error handling"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowProcess error handling should handle user canceling PSBT signing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle user canceling PSBT signing"
        },
        {
          "ancestorTitles": ["useBorrowProcess", "error handling"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowProcess error handling should handle PSBT signing returning no base64",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle PSBT signing returning no base64"
        },
        {
          "ancestorTitles": ["useBorrowProcess", "error handling"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowProcess error handling should handle submit borrow API failure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle submit borrow API failure"
        },
        {
          "ancestorTitles": ["useBorrowProcess", "error handling"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowProcess error handling should handle network errors during API calls",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle network errors during API calls"
        },
        {
          "ancestorTitles": ["useBorrowProcess", "error handling"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowProcess error handling should handle unexpected errors with fallback message",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle unexpected errors with fallback message"
        },
        {
          "ancestorTitles": ["useBorrowProcess", "state transitions"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowProcess state transitions should show correct loading states during loan process",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "should show correct loading states during loan process"
        },
        {
          "ancestorTitles": ["useBorrowProcess", "reset functionality"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowProcess reset functionality should reset loan state and errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should reset loan state and errors"
        },
        {
          "ancestorTitles": ["useBorrowProcess", "reset functionality"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowProcess reset functionality should reset successful loan state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should reset successful loan state"
        },
        {
          "ancestorTitles": ["useBorrowProcess", "edge cases"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowProcess edge cases should handle null collateralRuneInfo",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle null collateralRuneInfo"
        },
        {
          "ancestorTitles": ["useBorrowProcess", "edge cases"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useBorrowProcess edge cases should handle decimal conversion errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle decimal conversion errors gracefully"
        }
      ],
      "endTime": 1754922947048,
      "message": "",
      "name": "/Users/robin/code/swapping/src/hooks/useBorrowProcess.test.tsx",
      "startTime": 1754922946997,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["liquidium API", "fetchBorrowQuotesFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API fetchBorrowQuotesFromApi fetches borrow quotes successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "fetches borrow quotes successfully"
        },
        {
          "ancestorTitles": ["liquidium API", "fetchBorrowQuotesFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API fetchBorrowQuotesFromApi handles nested data structure response",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles nested data structure response"
        },
        {
          "ancestorTitles": ["liquidium API", "fetchBorrowQuotesFromApi"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API fetchBorrowQuotesFromApi properly encodes URL parameters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "properly encodes URL parameters"
        },
        {
          "ancestorTitles": ["liquidium API", "fetchBorrowQuotesFromApi"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API fetchBorrowQuotesFromApi throws error when JSON parsing fails",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error when JSON parsing fails"
        },
        {
          "ancestorTitles": ["liquidium API", "fetchBorrowQuotesFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API fetchBorrowQuotesFromApi throws error for non-OK response with error.message",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error for non-OK response with error.message"
        },
        {
          "ancestorTitles": ["liquidium API", "fetchBorrowQuotesFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API fetchBorrowQuotesFromApi throws error for non-OK response with string error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error for non-OK response with string error"
        },
        {
          "ancestorTitles": ["liquidium API", "fetchBorrowQuotesFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API fetchBorrowQuotesFromApi throws error for non-OK response with message field",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error for non-OK response with message field"
        },
        {
          "ancestorTitles": ["liquidium API", "fetchBorrowQuotesFromApi"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API fetchBorrowQuotesFromApi throws default error for non-OK response without error details",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws default error for non-OK response without error details"
        },
        {
          "ancestorTitles": ["liquidium API", "prepareLiquidiumBorrow"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API prepareLiquidiumBorrow prepares borrow transaction successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "prepares borrow transaction successfully"
        },
        {
          "ancestorTitles": ["liquidium API", "prepareLiquidiumBorrow"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API prepareLiquidiumBorrow throws error when JSON parsing fails",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error when JSON parsing fails"
        },
        {
          "ancestorTitles": ["liquidium API", "prepareLiquidiumBorrow"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API prepareLiquidiumBorrow throws error for non-OK response with error.message",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error for non-OK response with error.message"
        },
        {
          "ancestorTitles": ["liquidium API", "prepareLiquidiumBorrow"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API prepareLiquidiumBorrow throws error for non-OK response with string error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error for non-OK response with string error"
        },
        {
          "ancestorTitles": ["liquidium API", "prepareLiquidiumBorrow"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API prepareLiquidiumBorrow throws default error for non-OK response without error details",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws default error for non-OK response without error details"
        },
        {
          "ancestorTitles": ["liquidium API", "submitLiquidiumBorrow"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API submitLiquidiumBorrow submits borrow transaction successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "submits borrow transaction successfully"
        },
        {
          "ancestorTitles": ["liquidium API", "submitLiquidiumBorrow"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API submitLiquidiumBorrow handles successful response with JSON parse failure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles successful response with JSON parse failure"
        },
        {
          "ancestorTitles": ["liquidium API", "submitLiquidiumBorrow"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API submitLiquidiumBorrow throws error when JSON parsing fails on non-OK response",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error when JSON parsing fails on non-OK response"
        },
        {
          "ancestorTitles": ["liquidium API", "submitLiquidiumBorrow"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API submitLiquidiumBorrow throws error for non-OK response with error.message",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error for non-OK response with error.message"
        },
        {
          "ancestorTitles": ["liquidium API", "submitLiquidiumBorrow"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API submitLiquidiumBorrow throws error for non-OK response with string error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error for non-OK response with string error"
        },
        {
          "ancestorTitles": ["liquidium API", "submitLiquidiumBorrow"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API submitLiquidiumBorrow throws default error for non-OK response without error details",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws default error for non-OK response without error details"
        },
        {
          "ancestorTitles": ["liquidium API", "repayLiquidiumLoan"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API repayLiquidiumLoan initiates loan repayment successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "initiates loan repayment successfully"
        },
        {
          "ancestorTitles": ["liquidium API", "repayLiquidiumLoan"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API repayLiquidiumLoan transforms API response fields correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "transforms API response fields correctly"
        },
        {
          "ancestorTitles": ["liquidium API", "repayLiquidiumLoan"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API repayLiquidiumLoan prefers psbt field over base64_psbt when both exist",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "prefers psbt field over base64_psbt when both exist"
        },
        {
          "ancestorTitles": ["liquidium API", "repayLiquidiumLoan"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API repayLiquidiumLoan uses loanId parameter when offer_id not in response",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "uses loanId parameter when offer_id not in response"
        },
        {
          "ancestorTitles": ["liquidium API", "repayLiquidiumLoan"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API repayLiquidiumLoan returns response as-is when no data field",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns response as-is when no data field"
        },
        {
          "ancestorTitles": ["liquidium API", "repayLiquidiumLoan"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API repayLiquidiumLoan throws error when JSON parsing fails",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error when JSON parsing fails"
        },
        {
          "ancestorTitles": ["liquidium API", "repayLiquidiumLoan"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API repayLiquidiumLoan throws error for non-OK response with error.message",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error for non-OK response with error.message"
        },
        {
          "ancestorTitles": ["liquidium API", "repayLiquidiumLoan"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API repayLiquidiumLoan throws error for non-OK response with string error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error for non-OK response with string error"
        },
        {
          "ancestorTitles": ["liquidium API", "repayLiquidiumLoan"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API repayLiquidiumLoan throws default error for non-OK response without error details",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws default error for non-OK response without error details"
        },
        {
          "ancestorTitles": ["liquidium API", "submitRepayPsbt"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API submitRepayPsbt submits repay PSBT successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "submits repay PSBT successfully"
        },
        {
          "ancestorTitles": ["liquidium API", "submitRepayPsbt"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API submitRepayPsbt throws error when JSON parsing fails",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error when JSON parsing fails"
        },
        {
          "ancestorTitles": ["liquidium API", "submitRepayPsbt"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API submitRepayPsbt throws error for non-OK response with error.message",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error for non-OK response with error.message"
        },
        {
          "ancestorTitles": ["liquidium API", "submitRepayPsbt"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API submitRepayPsbt throws error for non-OK response with string error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error for non-OK response with string error"
        },
        {
          "ancestorTitles": ["liquidium API", "submitRepayPsbt"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API submitRepayPsbt throws default error for non-OK response without error details",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws default error for non-OK response without error details"
        },
        {
          "ancestorTitles": ["liquidium API", "fetchBorrowRangesFromApi"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API fetchBorrowRangesFromApi fetches borrow ranges successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "fetches borrow ranges successfully"
        },
        {
          "ancestorTitles": ["liquidium API", "fetchBorrowRangesFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API fetchBorrowRangesFromApi properly encodes URL parameters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "properly encodes URL parameters"
        },
        {
          "ancestorTitles": ["liquidium API", "fetchBorrowRangesFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API fetchBorrowRangesFromApi throws error when JSON parsing fails",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error when JSON parsing fails"
        },
        {
          "ancestorTitles": ["liquidium API", "fetchBorrowRangesFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API fetchBorrowRangesFromApi throws error for non-OK response with error.message",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error for non-OK response with error.message"
        },
        {
          "ancestorTitles": ["liquidium API", "fetchBorrowRangesFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API fetchBorrowRangesFromApi throws error for non-OK response with string error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error for non-OK response with string error"
        },
        {
          "ancestorTitles": ["liquidium API", "fetchBorrowRangesFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API fetchBorrowRangesFromApi throws error for non-OK response with message field",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error for non-OK response with message field"
        },
        {
          "ancestorTitles": ["liquidium API", "fetchBorrowRangesFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "liquidium API fetchBorrowRangesFromApi throws default error for non-OK response without error details",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws default error for non-OK response without error details"
        }
      ],
      "endTime": 1754922947104,
      "message": "",
      "name": "/Users/robin/code/swapping/src/lib/api/liquidium.test.ts",
      "startTime": 1754922947052,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["rune info route"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "rune info route returns rune info when found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "returns rune info when found"
        },
        {
          "ancestorTitles": ["rune info route"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "rune info route returns 404 success when rune not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "returns 404 success when rune not found"
        }
      ],
      "endTime": 1754922947155,
      "message": "",
      "name": "/Users/robin/code/swapping/src/app/api/ordiscan/rune-info/route.test.ts",
      "startTime": 1754922947108,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["useSwapExecution"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSwapExecution dispatches SWAP_SUCCESS on successful swap",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "dispatches SWAP_SUCCESS on successful swap"
        },
        {
          "ancestorTitles": ["useSwapExecution"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSwapExecution handles quote expiry",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles quote expiry"
        },
        {
          "ancestorTitles": ["useSwapExecution"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useSwapExecution retries with higher fee rate on fee error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "retries with higher fee rate on fee error"
        }
      ],
      "endTime": 1754922947207,
      "message": "",
      "name": "/Users/robin/code/swapping/src/hooks/useSwapExecution.test.ts",
      "startTime": 1754922947160,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["apiClient", "QUERY_KEYS"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "apiClient QUERY_KEYS exports the expected query keys",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "exports the expected query keys"
        },
        {
          "ancestorTitles": ["apiClient", "fetchRunesFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "apiClient fetchRunesFromApi returns empty array for empty query",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns empty array for empty query"
        },
        {
          "ancestorTitles": ["apiClient", "fetchRunesFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "apiClient fetchRunesFromApi fetches and processes runes data successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "fetches and processes runes data successfully"
        },
        {
          "ancestorTitles": ["apiClient", "fetchRunesFromApi"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "apiClient fetchRunesFromApi handles direct array response (backward compatibility)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles direct array response (backward compatibility)"
        },
        {
          "ancestorTitles": ["apiClient", "fetchRunesFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "apiClient fetchRunesFromApi returns empty array when success response has non-array data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns empty array when success response has non-array data"
        },
        {
          "ancestorTitles": ["apiClient", "fetchRunesFromApi"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "apiClient fetchRunesFromApi throws error for non-OK response",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error for non-OK response"
        },
        {
          "ancestorTitles": ["apiClient", "fetchRunesFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "apiClient fetchRunesFromApi throws error for JSON parse failure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error for JSON parse failure"
        },
        {
          "ancestorTitles": ["apiClient", "fetchPopularFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "apiClient fetchPopularFromApi fetches and processes popular collections successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "fetches and processes popular collections successfully"
        },
        {
          "ancestorTitles": ["apiClient", "fetchPopularFromApi"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "apiClient fetchPopularFromApi throws error for non-OK response",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error for non-OK response"
        },
        {
          "ancestorTitles": ["apiClient", "fetchPopularFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "apiClient fetchPopularFromApi throws error for JSON parse failure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error for JSON parse failure"
        },
        {
          "ancestorTitles": ["apiClient", "fetchRuneInfoFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "apiClient fetchRuneInfoFromApi normalizes rune name by removing bullet characters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "normalizes rune name by removing bullet characters"
        },
        {
          "ancestorTitles": ["apiClient", "fetchRuneInfoFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "apiClient fetchRuneInfoFromApi fetches and processes rune info successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "fetches and processes rune info successfully"
        },
        {
          "ancestorTitles": ["apiClient", "fetchRuneInfoFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "apiClient fetchRuneInfoFromApi returns null for 404 responses",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns null for 404 responses"
        },
        {
          "ancestorTitles": ["apiClient", "fetchRuneInfoFromApi"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "apiClient fetchRuneInfoFromApi throws error for server errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error for server errors"
        },
        {
          "ancestorTitles": ["apiClient", "fetchBtcBalanceFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "apiClient fetchBtcBalanceFromApi fetches and processes BTC balance successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "fetches and processes BTC balance successfully"
        },
        {
          "ancestorTitles": ["apiClient", "fetchBtcBalanceFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "apiClient fetchBtcBalanceFromApi returns 0 for missing balance data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns 0 for missing balance data"
        },
        {
          "ancestorTitles": ["apiClient", "fetchBtcBalanceFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "apiClient fetchBtcBalanceFromApi returns 0 when API returns null data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns 0 when API returns null data"
        },
        {
          "ancestorTitles": ["apiClient", "fetchBtcBalanceFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "apiClient fetchBtcBalanceFromApi throws error for non-OK response",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error for non-OK response"
        },
        {
          "ancestorTitles": ["apiClient", "fetchRuneActivityFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "apiClient fetchRuneActivityFromApi throws error when JSON parsing fails on error response",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "throws error when JSON parsing fails on error response"
        },
        {
          "ancestorTitles": ["apiClient", "fetchRuneActivityFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "apiClient fetchRuneActivityFromApi throws parse error for malformed success response",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "throws parse error for malformed success response"
        },
        {
          "ancestorTitles": ["apiClient", "fetchRunePriceHistoryFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "apiClient fetchRunePriceHistoryFromApi returns default response for empty rune name",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns default response for empty rune name"
        },
        {
          "ancestorTitles": ["apiClient", "fetchRunePriceHistoryFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "apiClient fetchRunePriceHistoryFromApi formats slug for LIQUIDIUM runes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "formats slug for LIQUIDIUM runes"
        }
      ],
      "endTime": 1754922947256,
      "message": "",
      "name": "/Users/robin/code/swapping/src/lib/apiClient.test.ts",
      "startTime": 1754922947212,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["useRunesSearch"],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useRunesSearch updates when props change",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "updates when props change"
        }
      ],
      "endTime": 1754922947307,
      "message": "",
      "name": "/Users/robin/code/swapping/src/hooks/useRunesSearch.test.tsx",
      "startTime": 1754922947261,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["/api/sats-terminal/search"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/sats-terminal/search should handle GET request successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle GET request successfully"
        },
        {
          "ancestorTitles": ["/api/sats-terminal/search"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/sats-terminal/search should generate stable IDs for items without token_id or id",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate stable IDs for items without token_id or id"
        },
        {
          "ancestorTitles": ["/api/sats-terminal/search"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "/api/sats-terminal/search should handle missing query parameter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle missing query parameter"
        }
      ],
      "endTime": 1754922947355,
      "message": "",
      "name": "/Users/robin/code/swapping/src/app/api/sats-terminal/search/route.test.ts",
      "startTime": 1754922947312,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["serverUtils", "getOrdiscanClient"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "serverUtils getOrdiscanClient should create Ordiscan client when API key is provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should create Ordiscan client when API key is provided"
        },
        {
          "ancestorTitles": ["serverUtils", "getOrdiscanClient"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "serverUtils getOrdiscanClient should throw error when ORDISCAN_API_KEY is missing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw error when ORDISCAN_API_KEY is missing"
        },
        {
          "ancestorTitles": ["serverUtils", "getOrdiscanClient"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "serverUtils getOrdiscanClient should throw error when ORDISCAN_API_KEY is empty string",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw error when ORDISCAN_API_KEY is empty string"
        },
        {
          "ancestorTitles": ["serverUtils", "getSatsTerminalClient"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "serverUtils getSatsTerminalClient should create enhanced SatsTerminal client with API key",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should create enhanced SatsTerminal client with API key"
        },
        {
          "ancestorTitles": ["serverUtils", "getSatsTerminalClient"],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "serverUtils getSatsTerminalClient should throw error when SATS_TERMINAL_API_KEY is missing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw error when SATS_TERMINAL_API_KEY is missing"
        },
        {
          "ancestorTitles": ["serverUtils", "getSatsTerminalClient"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "serverUtils getSatsTerminalClient should throw error when SATS_TERMINAL_API_KEY is empty string",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw error when SATS_TERMINAL_API_KEY is empty string"
        }
      ],
      "endTime": 1754922947408,
      "message": "",
      "name": "/Users/robin/code/swapping/src/lib/serverUtils.test.ts",
      "startTime": 1754922947358,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["handleApiError"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "handleApiError handles Error object",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles Error object"
        },
        {
          "ancestorTitles": ["handleApiError"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "handleApiError handles string error",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles string error"
        },
        {
          "ancestorTitles": ["handleApiError"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "handleApiError handles object with message property",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles object with message property"
        },
        {
          "ancestorTitles": ["handleApiError"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "handleApiError handles unknown type (number)",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles unknown type (number)"
        },
        {
          "ancestorTitles": ["createSuccessResponse"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "createSuccessResponse creates a success response with default status",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "creates a success response with default status"
        },
        {
          "ancestorTitles": ["createSuccessResponse"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "createSuccessResponse creates a success response with custom status",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "creates a success response with custom status"
        },
        {
          "ancestorTitles": ["createErrorResponse"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "createErrorResponse creates an error response with default status",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "creates an error response with default status"
        },
        {
          "ancestorTitles": ["createErrorResponse"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "createErrorResponse creates an error response with details",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "creates an error response with details"
        },
        {
          "ancestorTitles": ["createErrorResponse"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "createErrorResponse creates an error response with custom status",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "creates an error response with custom status"
        },
        {
          "ancestorTitles": ["createErrorResponse"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "createErrorResponse logs error to console in non-test env",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "logs error to console in non-test env"
        },
        {
          "ancestorTitles": ["validateRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "validateRequest validates body data successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "validates body data successfully"
        },
        {
          "ancestorTitles": ["validateRequest"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "validateRequest validates query data successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "validates query data successfully"
        },
        {
          "ancestorTitles": ["validateRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "validateRequest handles invalid JSON body",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles invalid JSON body"
        },
        {
          "ancestorTitles": ["validateRequest"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "validateRequest handles validation errors for body",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles validation errors for body"
        }
      ],
      "endTime": 1754922947455,
      "message": "",
      "name": "/Users/robin/code/swapping/src/lib/apiUtils.test.ts",
      "startTime": 1754922947412,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["supabase client"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "supabase client throws when accessed without configuration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws when accessed without configuration"
        }
      ],
      "endTime": 1754922947501,
      "message": "",
      "name": "/Users/robin/code/swapping/src/lib/supabase.test.ts",
      "startTime": 1754922947459,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["interpretRuneTransaction"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "interpretRuneTransaction correctly interprets a minting transaction",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "correctly interprets a minting transaction"
        },
        {
          "ancestorTitles": ["interpretRuneTransaction"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "interpretRuneTransaction correctly interprets an etching transaction",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "correctly interprets an etching transaction"
        },
        {
          "ancestorTitles": ["interpretRuneTransaction"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "interpretRuneTransaction correctly interprets a sending transaction",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "correctly interprets a sending transaction"
        },
        {
          "ancestorTitles": ["interpretRuneTransaction"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "interpretRuneTransaction correctly interprets a receiving transaction",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "correctly interprets a receiving transaction"
        },
        {
          "ancestorTitles": ["interpretRuneTransaction"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "interpretRuneTransaction correctly interprets an internal transfer transaction",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "correctly interprets an internal transfer transaction"
        },
        {
          "ancestorTitles": ["interpretRuneTransaction"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "interpretRuneTransaction correctly interprets an external transfer transaction",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "correctly interprets an external transfer transaction"
        },
        {
          "ancestorTitles": ["interpretRuneTransaction"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "interpretRuneTransaction handles errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles errors gracefully"
        }
      ],
      "endTime": 1754922947549,
      "message": "",
      "name": "/Users/robin/code/swapping/src/utils/transactionHelpers.test.ts",
      "startTime": 1754922947510,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["truncateTxid"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "truncateTxid returns empty string for empty input",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns empty string for empty input"
        },
        {
          "ancestorTitles": ["truncateTxid"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "truncateTxid returns original string if it's shorter than truncation length",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns original string if it's shorter than truncation length"
        },
        {
          "ancestorTitles": ["truncateTxid"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "truncateTxid truncates long strings correctly with default length",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "truncates long strings correctly with default length"
        },
        {
          "ancestorTitles": ["truncateTxid"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "truncateTxid truncates long strings with custom length",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "truncates long strings with custom length"
        },
        {
          "ancestorTitles": ["truncateTxid"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "truncateTxid returns original when length threshold is met",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns original when length threshold is met"
        },
        {
          "ancestorTitles": ["formatNumberString"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "formatNumberString returns default display for undefined or null",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "returns default display for undefined or null"
        },
        {
          "ancestorTitles": ["formatNumberString"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "formatNumberString formats small numbers correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "formats small numbers correctly"
        },
        {
          "ancestorTitles": ["formatNumberString"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "formatNumberString formats large numbers with commas",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "formats large numbers with commas"
        },
        {
          "ancestorTitles": ["formatNumberString"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "formatNumberString handles extremely large numbers without losing precision",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles extremely large numbers without losing precision"
        },
        {
          "ancestorTitles": ["formatNumberString"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "formatNumberString returns default display for invalid input",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "returns default display for invalid input"
        },
        {
          "ancestorTitles": ["formatNumberString"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "formatNumberString allows custom default display",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "allows custom default display"
        },
        {
          "ancestorTitles": ["formatNumberString"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "formatNumberString handles zero correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles zero correctly"
        },
        {
          "ancestorTitles": ["formatNumberString"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "formatNumberString formats decimal and negative numbers",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "formats decimal and negative numbers"
        }
      ],
      "endTime": 1754922947592,
      "message": "",
      "name": "/Users/robin/code/swapping/src/utils/formatters.test.ts",
      "startTime": 1754922947553,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["runesInfoStore"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "runesInfoStore updates selected rune info",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "updates selected rune info"
        },
        {
          "ancestorTitles": ["runesInfoStore"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "runesInfoStore updates search query",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "updates search query"
        }
      ],
      "endTime": 1754922947639,
      "message": "",
      "name": "/Users/robin/code/swapping/src/store/runesInfoStore.test.ts",
      "startTime": 1754922947600,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["fetchRuneInfoFromApi"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "fetchRuneInfoFromApi fetches and returns rune info",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "fetches and returns rune info"
        },
        {
          "ancestorTitles": ["fetchRuneInfoFromApi"],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "fetchRuneInfoFromApi throws on error response",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "throws on error response"
        }
      ],
      "endTime": 1754922947680,
      "message": "",
      "name": "/Users/robin/code/swapping/src/lib/api/ordiscan.test.ts",
      "startTime": 1754922947642,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["getCachedPopularRunes"],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "getCachedPopularRunes returns fallback data when cache is empty",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "returns fallback data when cache is empty"
        }
      ],
      "endTime": 1754922947722,
      "message": "",
      "name": "/Users/robin/code/swapping/src/lib/popularRunesCache.test.ts",
      "startTime": 1754922947684,
      "status": "passed",
      "summary": ""
    }
  ],
  "wasInterrupted": false
}
